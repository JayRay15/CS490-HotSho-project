name: Run Tests and Coverage

on:
  push:
    branches: [ main, develop, testing, fixMergeConflictTest ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        run: npm run test:coverage
        env:
          NODE_ENV: test
          MONGO_URI: mongodb://localhost:27017/test

      - name: Check coverage thresholds
        working-directory: ./backend
        run: |
          echo "Checking backend coverage meets 90% threshold..."
          npm run test:coverage -- --passWithNoTests

      - name: Upload backend coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

      - name: Archive backend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/coverage/

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    env:
      # Work around npm optional dependency bug with Rollup native binaries on Linux runners
      # See https://github.com/npm/cli/issues/4828 and Rollup docs
      ROLLUP_DISABLE_NATIVE: '1'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci --no-optional

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test:coverage
        env:
          ROLLUP_DISABLE_NATIVE: '1'

      - name: Check coverage thresholds
        working-directory: ./frontend
        run: |
          echo "Checking frontend coverage meets 90% threshold..."
          npm run test:coverage -- --run
        env:
          ROLLUP_DISABLE_NATIVE: '1'

      - name: Upload frontend coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

      - name: Archive frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: frontend/coverage/

  coverage-report:
    name: Combined Coverage Report
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage-report
          path: ./coverage/backend

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-report
          path: ./coverage/frontend

      - name: Display coverage summary
        run: |
          echo "=== Backend Coverage ===" 
          cat ./coverage/backend/coverage-summary.json || echo "No backend summary found"
          echo ""
          echo "=== Frontend Coverage ==="
          cat ./coverage/frontend/coverage-summary.json || echo "No frontend summary found"

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const backendSummary = fs.existsSync('./coverage/backend/coverage-summary.json') 
              ? JSON.parse(fs.readFileSync('./coverage/backend/coverage-summary.json', 'utf8'))
              : null;
            const frontendSummary = fs.existsSync('./coverage/frontend/coverage-summary.json')
              ? JSON.parse(fs.readFileSync('./coverage/frontend/coverage-summary.json', 'utf8'))
              : null;

            let comment = '## ðŸ“Š Test Coverage Report\n\n';
            
            if (backendSummary) {
              const backend = backendSummary.total;
              comment += '### Backend Coverage\n';
              comment += `- **Statements**: ${backend.statements.pct}%\n`;
              comment += `- **Branches**: ${backend.branches.pct}%\n`;
              comment += `- **Functions**: ${backend.functions.pct}%\n`;
              comment += `- **Lines**: ${backend.lines.pct}%\n\n`;
            }
            
            if (frontendSummary) {
              const frontend = frontendSummary.total;
              comment += '### Frontend Coverage\n';
              comment += `- **Statements**: ${frontend.statements.pct}%\n`;
              comment += `- **Branches**: ${frontend.branches.pct}%\n`;
              comment += `- **Functions**: ${frontend.functions.pct}%\n`;
              comment += `- **Lines**: ${frontend.lines.pct}%\n\n`;
            }
            
            comment += 'âœ… All tests passed and coverage thresholds met (90%)!';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
